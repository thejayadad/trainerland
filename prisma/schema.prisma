generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  availability  Availability[]  @relation("UserAvailability")
  trainings     Trainer[]       @relation("UserTrainers")
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Availability {
  id         String  @id @default(uuid())
  day        Day
  startTime  String
  finishTime String
  isActive   Boolean @default(true)

  user       User    @relation("UserAvailability", fields: [userEmail], references: [email], onDelete: Cascade)
  userEmail  String

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Day {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}

model Trainer {
  id          String  @id @default(uuid())
  title       String
  color       String
  duration    Int
  category    String
  active      Boolean @default(true)
  description String
  userEmail   String
  user        User    @relation("UserTrainers", fields: [userEmail], references: [email], onDelete: Cascade)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
